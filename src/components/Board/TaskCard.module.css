.container {
    background-color: white;
    border-radius: 20px;
    padding: 1rem;
    position: relative;
}

.top {
    display: flex;
    justify-content: space-between;
}

.top_left {
    display: flex;
    align-items: center;
    font-size: 0.6rem;
    color: var(--text-gray);
    gap: 7px;
}

.assigned {
    width: 16px;
    height: 16px;
    background-color: #ffebeb;
    color: black;
    border-radius: 100%;
    font-size: 7.5px;
    font-family: DM Sans, sans-serif;
    display: flex;
    align-items: center;
    justify-content: center;
}

.assigned p {
    margin-top: 1px;
}

.menu_icon {
    cursor: pointer;
}

.title {
    font-family: Poppins, sans-serif;
    font-size: 1.2rem;
    font-weight: 500;
    margin-top: 10px;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    line-clamp: 2;
    -webkit-line-clamp: 2;
    overflow: hidden;
}

.checklist_heading {
    margin-top: 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.checklist_text {
    font-family: Poppins, sans-serif;
    font-weight: 500;
}

.arrow {
    width: 24px;
    height: 24px;
    background: #eeecec;
    border-radius: 3px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

.task_list_container {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-top: 15px;
}

.task {
    display: flex;
    gap: 10px;
    border: 1px solid #e2e2e2;
    border-radius: 12px;
    padding: 0.8rem 1rem;
}

.bottom {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

.btn_style {
    color: #767575;
    background-color: #eeecec;
    font-size: 0.6rem;
    font-family: Poppins, sans-serif;
    font-weight: 500;
    padding: 0.3rem 0.5rem 0.25rem;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    cursor: pointer;
}

.date_style {
    color: #767575;
    background: #dbdbdb;
    font-size: 0.6rem;
    font-family: Poppins, sans-serif;
    font-weight: 500;
    padding: 0.3rem 0.5rem 0.25rem;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
}

.bottom_right {
    display: flex;
    gap: 10px;
    margin-left: auto;
}

.menu {
    position: absolute;
    top: 40px;
    right: 13px;
    background-color: white;
    padding: 1rem;
    box-shadow: 0px 2px 22px 0px #7e7a7a40;
    border-radius: 12px;
    width: 45%;
}

.menu_item {
    font-family: Poppins, sans-serif;
    font-weight: 500;
    margin-bottom: 0.6rem;
    cursor: pointer;
}

.delete {
    color: var(--color-alert);
    font-family: Poppins, sans-serif;
    font-weight: 500;
    cursor: pointer;
}

.container_checkbox {
    display: block;
    position: relative;
    padding-left: 20px;
    margin-top: 3px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.container_checkbox input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 18px;
    width: 18px;
    background-color: white;
    border: 2px solid #e2e2e2;
    border-radius: 6px;
}

/* When the checkbox is checked, add a blue background */
.container_checkbox input:checked ~ .checkmark {
    background: #17a2b8;
    border: 2px solid #17a2b8;
    border-radius: 6px;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container_checkbox input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.container_checkbox .checkmark:after {
    left: 3px;
    top: 0px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}
